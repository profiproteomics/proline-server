<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>fr.proline</groupId>
    <artifactId>ProFI-Pom</artifactId>
    <version>0.0.6-SNAPSHOT</version> <!-- Snapshot Trunk version -->
  </parent>

  <groupId>fr.proline</groupId>
  <artifactId>Proline-Cortex</artifactId>
  <version>0.0.3-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <version.path>${project.basedir}/src/main/scala/fr/proline/cortex</version.path>
    <core.version>0.4.0-SNAPSHOT</core.version> <!-- Snapshot Trunk version -->
    <sqlite4java.version>1.0.392</sqlite4java.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>scalalogging-slf4j_2.10</artifactId>
      <!-- Version inherited from ProFI-Pom -->
    </dependency>

    <!-- JMS Spec 2.0 + HornetQ JMS client + Netty (versions checked 10 july 2014) -->
    <dependency>
      <groupId>org.jboss.spec.javax.jms</groupId>
	  <artifactId>jboss-jms-api_2.0_spec</artifactId>
	  <version>1.0.0.Final</version>
    </dependency>
    <dependency>
	  <groupId>org.hornetq</groupId>
	  <artifactId>hornetq-jms-client</artifactId>
	  <version>2.4.1.Final</version>
    </dependency>
    <dependency>
	  <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
      <version>4.0.20.Final</version>
    </dependency>

    <!-- JSON-RPC -->
    <dependency>
      <groupId>com.thetransactioncompany</groupId>
      <artifactId>jsonrpc2-base</artifactId>
    </dependency>

    <!-- ProFI Commons -->
    <dependency>
       <groupId>fr.proline.util</groupId>
       <artifactId>ProFI-Commons-Java</artifactId>
       <version>0.1.0-SNAPSHOT</version> <!-- Snapshot Trunk version -->
    </dependency>

    <!-- Proline-Core Service layer -->
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-OMP</artifactId>
      <version>${core.version}</version>
    </dependency>

    <!-- Proline-Admin -->
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-Admin</artifactId>
      <version>0.2.0-SNAPSHOT</version>  <!-- Snapshot Trunk version -->
    </dependency>

    
    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
    	<groupId>fr.proline</groupId>
    	<artifactId>PM-DatasetExporter</artifactId>
    	<version>0.2.0-SNAPSHOT</version>
    </dependency>
    <dependency>
    	<groupId>fr.proline</groupId>
    	<artifactId>PM-MzIdentML</artifactId>
    	<version>0.1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
    	<groupId>fr.proline</groupId>
    	<artifactId>PM-MascotParser</artifactId>
    	<version>0.2.0-SNAPSHOT</version>
    </dependency>
    <dependency>
    	<groupId>fr.proline</groupId>
    	<artifactId>PM-OmssaParser</artifactId>
    	<version>0.1.0-SNAPSHOT</version>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>

    <pluginManagement>
      <plugins>
        <!-- For Eclipse build -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>

                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.google.code.maven-replacer-plugin</groupId>
                    <artifactId>replacer</artifactId>
                    <versionRange>[1.5.2,)</versionRange>
                    <goals>
                      <goal>replace</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>

                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.8,)</versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                       <runOnIncremental>false</runOnIncremental>
                     </execute>
                  </action>
                </pluginExecution>

              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>


    <plugins>

      <!-- Phase "validate" Copy resources -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <!-- Version inherited from ProFI-Pom -->

        <executions>

          <execution>
            <!-- Copy .bat and .sh scripts WITH filtering -->
            <id>copy-scripts</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>scripts</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <!-- Copy resources to config/ directory WITHOUT filtering -->
            <id>copy-config</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/config</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                  <excludes>
                    <exclude>META-INF/**</exclude>
                  </excludes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <!-- Phase "generate-sources" Handle this Proline module version -->
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <!-- Version inherited from ProFI-Pom -->

        <executions>
          <execution>
            <phase>generate-sources</phase>
              <goals>
                <goal>replace</goal>
              </goals>
           </execution>
         </executions>

         <configuration>
           <file>${version.path}/Version.scala.template</file>
           <outputFile>${version.path}/Version.scala</outputFile>
           <replacements>
             <replacement>
               <token>@moduleName@</token>
               <value>${project.artifactId}</value>
             </replacement>
             <replacement>
               <token>@version@</token>
               <value>${project.version}_${maven.build.timestamp}_${user.name}</value>
             </replacement>
           </replacements>
         </configuration>

      </plugin>

      <!-- Phase "compile" Scala compiler -->
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <!-- Version inherited from ProFI-Pom -->
        <configuration>
          <recompileMode>incremental</recompileMode>
          <!-- <residentCompilerLimit>1</residentCompilerLimit> -->
          <args>
            <arg>-deprecation</arg>
            <arg>-unchecked</arg>
            <arg>-P:continuations:enable</arg>
          </args>
          <javacArgs>
            <javacArg>-Xlint:unchecked</javacArg>
            <javacArg>-Xlint:deprecation</javacArg>
          </javacArgs>
          <charset>UTF-8</charset>
          <compilerPlugins>
            <compilerPlugin>
              <groupId>org.scala-lang.plugins</groupId>
              <artifactId>continuations</artifactId>
              <version>${scala-library.version}</version>
            </compilerPlugin>
          </compilerPlugins>
        </configuration>
      </plugin>

      <!-- Phase "package" Copy Jar and native dependencies to lib/ directory -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <!-- Version inherited from ProFI-Pom -->

        <executions>

          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeTypes>jar</includeTypes>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>

          <!-- Copy sqlite4java native libraries (Linux so and Windows dll) -->
          <execution>
            <id>copy-dll</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeTypes>so,dll</includeTypes>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>

        </executions>

      </plugin>

      <!-- Build Zip Assembly -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <!-- Version inherited from ProFI-Pom -->
        <configuration>
          <descriptors>
            <descriptor>assembly/assembly.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>

    </plugins>
  </build>

</project>
