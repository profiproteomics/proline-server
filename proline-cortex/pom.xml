<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>fr.proline</groupId>
    <artifactId>ProFI-Pom</artifactId>
    <version>0.3.0-SNAPSHOT</version> <!-- Snapshot Trunk version -->
  </parent>

  <artifactId>Proline-Cortex</artifactId>
  <version>0.3.0-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <version.path>${project.basedir}/src/main/scala/fr/proline/cortex</version.path>
    <core.version>1.0.0-SNAPSHOT</core.version> <!-- Snapshot Trunk version -->
  </properties>

  <dependencies>

    <!-- Scala -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <!-- Version inherited from ProFI-Pom ${scala-library.version} -->
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>com.typesafe.scala-logging</groupId>
      <artifactId>scala-logging_${scala.version}</artifactId>
      <!-- Version inherited from ProFI-Pom -->
    </dependency>
    
    <!-- Configuration -->
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>1.0.0</version>
    </dependency>

    <!-- JMS Spec 2.0 + HornetQ JMS client + Netty (versions checked 10 july 2014) -->
    <!-- TODO: remove me because we depend on Proline-Cortex-Node -->
    <dependency>
      <groupId>org.jboss.spec.javax.jms</groupId>
      <artifactId>jboss-jms-api_2.0_spec</artifactId>
      <version>1.0.0.Final</version>
    </dependency>
    <dependency>
      <groupId>org.hornetq</groupId>
      <artifactId>hornetq-jms-client</artifactId>
      <version>2.4.1.Final</version>
    </dependency>
    <dependency>
      <groupId>org.hornetq</groupId>
      <artifactId>hornetq-core-client</artifactId>
      <version>2.4.1.Final</version>
    </dependency>
    
    <!-- HTTP layer -->
    <dependency>
	  <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
      <version>4.0.20.Final</version>
    </dependency>
     
    <!-- Serialization -->
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-scala_${scala.version}</artifactId>
      <!-- Version inherited from ProFI-Pom -->
    </dependency>
    
    <!-- Commons IO used for resursive delete -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.4</version>
    </dependency>

    <!-- JSON-RPC -->
    <dependency>
      <groupId>com.thetransactioncompany</groupId>
      <artifactId>jsonrpc2-base</artifactId>
    </dependency>

    <!-- ProFI Commons -->
    <dependency>
       <groupId>fr.proline.util</groupId>
       <artifactId>ProFI-Commons-Java</artifactId>
       <version>0.4.0-SNAPSHOT</version> 
    </dependency>
    <dependency>
      <groupId>fr.proline.util</groupId>
      <artifactId>ProFI-Commons-Scala</artifactId>
      <version>0.5.0-SNAPSHOT</version>
    </dependency>
    
    <!-- sqlite4java (needed for mzDB-access) -->
    <dependency>
      <groupId>com.almworks.sqlite4java</groupId>
      <artifactId>sqlite4java</artifactId>
      <version>${sqlite4java.version}</version>
    </dependency>
    
    <!-- Proline-Cortex components -->
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-Cortex-API</artifactId>
      <version>0.3.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-Node</artifactId>
      <version>0.2.0-SNAPSHOT</version>
    </dependency>

    <!-- Proline-Core -->
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-Databases</artifactId>
      <version>${core.version}</version>
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-ORM</artifactId>
      <version>${core.version}</version>
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-OM</artifactId>
      <version>${core.version}</version>
      <exclusions>
        <exclusion>
          <groupId>fr.profi</groupId>
          <artifactId>mzdb-processing</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-DAL</artifactId>
      <version>${core.version}</version>
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-OMP</artifactId>
      <version>${core.version}</version>
    </dependency>

    <!-- Proline-Admin -->
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-Admin</artifactId>
      <version>0.5.0-SNAPSHOT</version>  <!-- Snapshot Trunk version -->
    </dependency>
    
    <!-- Proline Modules for result files import -->
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>PM-MascotParser</artifactId>
      <version>0.5.0-SNAPSHOT</version>  <!-- Snapshot Trunk version -->
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>PM-MaxQuantParser</artifactId>
      <version>0.1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>PM-OmssaParser</artifactId>
      <version>0.5.0-SNAPSHOT</version>  <!-- Snapshot Trunk version -->
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>PM-XtandemParser</artifactId>
      <version>0.4.0-SNAPSHOT</version>  <!-- Snapshot Trunk version -->
      <scope>runtime</scope>
    </dependency>
    
    <!-- Other Proline Modules -->
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>PM-DatasetExporter</artifactId>
      <version>0.5.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>PM-FragmentMatchGenerator</artifactId>
      <version>0.5.0-SNAPSHOT</version>  <!-- Snapshot Trunk version -->
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>PM-MSDiag</artifactId>
      <version>0.5.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>PM-MzIdentML</artifactId>
      <version>0.5.0-SNAPSHOT</version>
    </dependency>
  
    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>
    
  </dependencies>

  <build>
    
    <pluginManagement>
      <plugins>
        <!-- For Eclipse build -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>

                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>com.google.code.maven-replacer-plugin</groupId>
                    <artifactId>replacer</artifactId>
                    <versionRange>[1.5.2,)</versionRange>
                    
                    <goals>
                      <goal>replace</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                       <runOnIncremental>false</runOnIncremental>
                     </execute>
                  </action>
                </pluginExecution>

                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <versionRange>[2.8,)</versionRange>
                    <goals>
                      <goal>copy-dependencies</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute>
                       <runOnIncremental>false</runOnIncremental>
                     </execute>
                  </action>
                </pluginExecution>

              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        
        <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemProperties>
            <property>
              <name>sqlite4java.library.path</name>
              <value>${project.build.directory}/lib</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      
      </plugins>
    </pluginManagement>


    <plugins>

      <!-- Phase "validate" Copy resources -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <!-- Version inherited from ProFI-Pom -->

        <executions>

          <execution>
            <!-- Copy .bat and .sh scripts WITH filtering -->
            <id>copy-scripts</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>scripts</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <!-- Copy resources to config/ directory WITHOUT filtering -->
            <id>copy-config</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/config</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                  <excludes>
                    <exclude>META-INF/**</exclude>
                  </excludes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <!-- Phase "generate-sources" Handle this Proline module version -->
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <!-- Version & config inherited from ProFI-Pom -->
        <executions>
          <execution>
          	<id>scala-version-generation</id>
            <phase>generate-sources</phase>
            <configuration>
			<skip>false</skip>
      	</configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Phase "compile" Scala compiler -->
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <!-- Version inherited from ProFI-Pom -->
        <configuration>
        	<charset>UTF-8</charset>
        </configuration>
      </plugin>

      <!-- Phase "package" Copy Jar and native dependencies to lib/ directory -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <!-- Version inherited from ProFI-Pom -->

        <executions>

          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeTypes>jar</includeTypes>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>

          <!-- Copy sqlite4java native libraries (Linux so and Windows dll) -->
          <execution>
            <id>copy-dll</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeTypes>so,dll</includeTypes>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <stripVersion>true</stripVersion>
              <overWriteIfNewer>true</overWriteIfNewer>
              <artifactItems>
                <artifactItem>
                  <groupId>com.almworks.sqlite4java</groupId>
                  <artifactId>sqlite4java-win32-x64</artifactId>
                  <version>${sqlite4java.version}</version>
                  <type>dll</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </artifactItem>
          
                <artifactItem>
                  <groupId>com.almworks.sqlite4java</groupId>
                  <artifactId>libsqlite4java-linux-amd64</artifactId>
                  <version>${sqlite4java.version}</version>
                  <type>so</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/lib</outputDirectory>
                </artifactItem>
          
              </artifactItems>
            </configuration>
          </execution>

        </executions>

      </plugin>

      <!-- Build Zip Assembly -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <!-- Version inherited from ProFI-Pom -->
        <configuration>
          <descriptors>
            <descriptor>assembly/assembly.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <scm>
  	<connection>scm:svn:ttps://bioproj.extra.cea.fr/svn/proline/Proline-JMS-Components/Proline-Cortex/branches/0.3.0.c_Merge_0.3.0.a&amp;0.3.0.b</connection>
  </scm>
  
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>psidev.psi.tools</groupId>
        <artifactId>xxindex</artifactId>
        <version>0.14</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
</project>
