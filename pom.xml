<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>profi-pom</artifactId>
        <groupId>fr.proline</groupId>
        <version>1.2.0</version>
    </parent>

    <artifactId>proline-server</artifactId>
    <version>2.3.2-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>${project.artifactId}</name>
    <description>Multi Modules Projects containing all modules needed to create the Proline Suite server: The JMS Cortex server and all processing modules</description>

    <modules>
        <module>msparser-native-libraries</module>
        <module>pm-dataset-exporter</module>
        <module>pm-fragmentmatch-generator</module>
        <module>pm-mascot-parser</module>
        <module>pm-maxquant-parser</module>
        <module>pm-msdiag</module>
        <module>pm-mzidentml</module>
        <module>pm-omssa-parser</module>
        <module>pm-sequence-repository</module>
        <module>pm-xtandem-parser</module>
        <module>proline-cortex</module>
        <module>proline-cortex-api</module>
        <module>proline-node</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <core.version>2.3.1</core.version>  <!-- core version to use in all modules-->
        <mzdb.version>1.2.1</mzdb.version>  <!-- mzdb version to use in all modules -->
        <commons.version>1.2.0</commons.version>
        <server.version>${project.version}</server.version>  <!-- server version to use in all modules -->
    </properties>
    <scm>
        <connection>scm:git:https://github.com/profiproteomics/proline-server.git</connection>
    </scm>
    <dependencyManagement>
        <dependencies>

            <!-- ProFi Commons -->
            <dependency>
                <groupId>fr.profi.util</groupId>
                <artifactId>profi-commons-scala_${scala.compat.version}</artifactId>
                <version>${commons.version}</version>
            </dependency>
            <dependency>
                <groupId>fr.profi.util</groupId>
                <artifactId>profi-commons-java</artifactId>
                <version>${commons.version}</version>
            </dependency>
            <dependency>
                <groupId>fr.profi</groupId>
                <artifactId>profi-proteomics_${scala.compat.version}</artifactId>
                <version>${commons.version}</version>
            </dependency>

            <!-- MzDB access and processing -->
            <dependency>
                <groupId>fr.profi</groupId>
                <artifactId>mzdb-access_${scala.compat.version}</artifactId>
                <version>${mzdb.version}</version>
            </dependency>
            <dependency>
                <groupId>fr.profi</groupId>
                <artifactId>mzdb-processing_${scala.compat.version}</artifactId>
                <version>${mzdb.version}</version>
            </dependency>

            <!-- "Proline" modules -->
            <dependency>
                <groupId>fr.proline</groupId>
                <artifactId>proline-om_${scala.compat.version}</artifactId>
                <version>${core.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>fr.proline</groupId>
                <artifactId>proline-databases</artifactId>
                <version>${core.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>fr.proline</groupId>
                <artifactId>proline-dal_${scala.compat.version}</artifactId>
                <version>${core.version}</version>
                <type>test-jar</type>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>fr.proline</groupId>
                <artifactId>proline-om_${scala.compat.version}</artifactId>
                <version>${core.version}</version>
            </dependency>

            <dependency>
                <groupId>fr.proline</groupId>
                <artifactId>proline-databases</artifactId>
                <version>${core.version}</version>
            </dependency>

            <dependency>
                <groupId>fr.proline</groupId>
                <artifactId>proline-orm</artifactId>
                <version>${core.version}</version>
            </dependency>

            <dependency>
                <groupId>fr.proline</groupId>
                <artifactId>proline-dal_${scala.compat.version}</artifactId>
                <version>${core.version}</version>
            </dependency>

            <dependency>
                <groupId>fr.proline</groupId>
                <artifactId>proline-omp_${scala.compat.version}</artifactId>
                <version>${core.version}</version>
            </dependency>
       </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- JUnit tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <!-- Version inherited from ProFI-Pom -->
            <scope>test</scope>
        </dependency>

        <dependency> <!-- includes logback-core and slf4j-->
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

    </dependencies>
</project>