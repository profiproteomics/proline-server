<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>ProFI-Pom</artifactId>
    <groupId>fr.proline</groupId>
    <version>0.0.2</version>
  </parent>

  <artifactId>PM-MascotParser</artifactId>
  <version>0.0.7</version>

  <name>${project.artifactId}</name>
  <description>Proline Module which parse a Mascot result file and store its result in databases</description>
  <inceptionYear>2012</inceptionYear>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <core.version>0.0.9</core.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
    </dependency>

    <dependency>
      <groupId>com.weiglewilczek.slf4s</groupId>
      <artifactId>slf4s_2.9.1</artifactId>
    </dependency>

    <!-- Commons collection: is it needed ?
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.1</version>
    </dependency> -->

    <!-- Mascot Parser native libraries (for all OSes, loaded at runtime)
         msparser.jar dependency is defined via Maven profiles -->
    <dependency>
      <groupId>matrixscience</groupId>
      <artifactId>MSParser-native-libraries_2.4.00</artifactId>
      <version>0.0.2</version>
    </dependency>

    <!-- BioJava -->
    <dependency>
      <groupId>biojava</groupId>
      <artifactId>biojava</artifactId>
      <version>1.7</version>
    </dependency>

    <!-- Proline -->
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-OM</artifactId>
      <version>${core.version}</version>
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-DAL</artifactId>
      <version>${core.version}</version>
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-OMP</artifactId>
      <version>${core.version}</version>
    </dependency>

     <!-- Tests -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-tools.testing</groupId>
      <artifactId>specs_2.9.1</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.9.1</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.dbunit</groupId>
      <artifactId>dbunit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-Databases</artifactId>
      <version>${core.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>fr.proline</groupId>
      <artifactId>Proline-DAL</artifactId>
      <version>${core.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <args>
                <arg>-make:transitive</arg>
                <arg>-dependencyfile</arg>
                <arg>${project.build.directory}/.scala_dependencies</arg>
              </args>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

  <profiles>

    <profile>
      <!-- Development profile : Windows 64 bits -->
      <id>dev_64</id>

      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>

      <dependencies>

        <dependency>
          <groupId>matrixscience</groupId>
          <artifactId>msparser</artifactId>
          <version>2.4.00</version>
          <classifier>Windows_amd64</classifier>
        </dependency>

      </dependencies>

    </profile> <!-- End of dev_64 profile -->

    <profile>
      <!-- Integration profile : Linux 32 bits -->
      <id>integ_32</id>

      <dependencies>

        <dependency>
          <groupId>matrixscience</groupId>
          <artifactId>msparser</artifactId>
          <version>2.4.00</version>
          <classifier>Linux_i386</classifier>
        </dependency>

      </dependencies>

    </profile> <!-- End of integ_32 profile -->

    <profile>
      <!-- Integration (Jenkins) profile : Linux 64 bits -->
      <id>integ_64</id>

      <dependencies>

        <dependency>
          <groupId>matrixscience</groupId>
          <artifactId>msparser</artifactId>
          <version>2.4.00</version>
          <classifier>Linux_amd64</classifier>
        </dependency>

      </dependencies>

    </profile> <!-- End of integ_64 profile -->

  </profiles>

</project>
