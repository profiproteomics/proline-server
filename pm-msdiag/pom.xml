<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>ProFI-Pom</artifactId>
		<groupId>fr.proline</groupId>
		<version>0.0.4-SNAPSHOT</version>  <!-- Snapshot Trunk version -->
	</parent>

	<artifactId>PM-MSDiag</artifactId>
	<version>0.0.2-SNAPSHOT</version>

	<name>${project.artifactId}</name>
	<description>Proline Module made to generate the fragment matches from a spectrum</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<core.version>0.1.3-SNAPSHOT</core.version>  <!-- Snapshot Trunk version -->
		<version.path>${basedir}/src/main/scala/fr/proline/module/quality/msdiag</version.path>
	</properties>

	<dependencies>

		<!-- Scala -->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<!-- Version inherited from ProFI-Pom ${scala-library.version} -->
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>com.typesafe</groupId>
			<artifactId>scalalogging-slf4j_2.10</artifactId>
			<!-- Version inherited from ProFI-Pom -->
		</dependency>

		<!-- If log4j is needed, add log4j-over-slf4j dependency -->

		<dependency>
			<groupId>antlr</groupId>
			<artifactId>antlr</artifactId>
			<version>2.7.7</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- Proline -->
		<dependency>
			<groupId>fr.proline</groupId>
			<artifactId>Proline-OM</artifactId>
			<version>${core.version}</version>
		</dependency>
		<dependency>
			<groupId>fr.proline</groupId>
			<artifactId>Proline-DAL</artifactId>
			<version>${core.version}</version>
		</dependency>
		<dependency>
			<groupId>fr.proline</groupId>
			<artifactId>Proline-Databases</artifactId>
			<version>${core.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>fr.proline</groupId>
			<artifactId>Proline-DAL</artifactId>
			<version>${core.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>fr.proline</groupId>
			<artifactId>PM-MascotParser</artifactId>
			<version>0.0.11-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>fr.proline</groupId>
			<artifactId>PM-OmssaParser</artifactId>
			<version>0.0.7-SNAPSHOT</version>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.version}</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>javafx</artifactId>
			<version>2.2</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/javafx/lib/jfxrt.jar</systemPath>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.1.6</version>
			</plugin>
			<plugin>
				<groupId>com.google.code.maven-replacer-plugin</groupId>
				<artifactId>replacer</artifactId>

				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>replace</goal>
						</goals>
					</execution>
				</executions>

				<configuration>
					<file>${version.path}/Version.scala.template</file>
					<outputFile>${version.path}/Version.scala</outputFile>
					<replacements>
						<replacement>
							<token>@moduleName@</token>
							<value>${project.artifactId}</value>
						</replacement>
						<replacement>
							<token>@version@</token>
							<value>${project.version}_${maven.build.timestamp}_${user.name}</value>
						</replacement>
					</replacements>
				</configuration>

			</plugin>

		</plugins>
	</build>

</project>
